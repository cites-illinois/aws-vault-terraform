---
- hosts: all
  gather_facts: false
  remote_user: ec2-user
  become: yes

  tasks:
    - name: lookup the vault user passwd entry
      command: docker run -i {{ vault_image }} getent passwd vault
      register: getent_vault
      check_mode: false
      changed_when: false
    - name: set the vault_user and vault_group facts
      set_fact:
        vault_user:  "{{ getent_vault.stdout | regex_replace('^([^:]*):([^:]*):(\\d*):(\\d*):([^:]*):([^:]*):([^:]*)$', '\\3') }}"
        vault_group: "{{ getent_vault.stdout | regex_replace('^([^:]*):([^:]*):(\\d*):(\\d*):([^:]*):([^:]*):([^:]*)$', '\\4') }}"

    - name: reload script
      copy:
        dest: /usr/local/bin/uiuc-vault-server-reload
        mode: 0755
        owner: root
        group: root
        content: !unsafe |
            #!/bin/bash
            set -e

            _container_id=($(docker ps --filter "label=edu.illinois.ics.vault.role=server" --format '{{.ID}}'))
            if [[ ${#_container_id[@]} -gt 0 ]]; then
                docker kill -s HUP ${_container_id[@]} || :
            fi

    - name: configuration directory
      file:
        path: /vault/config
        mode: 0755
        owner: "{{ vault_user }}"
        group: "{{ vault_group }}"
        state: directory
    - name: logging directory
      file:
        path: /vault/logs
        mode: 0700
        owner: "{{ vault_user }}"
        group: "{{ vault_group }}"
        state: directory
      notify: vault | reload

    - name: tls key file
      copy:
        dest: /vault/config/server.key
        mode: 0600
        owner: "{{ vault_user }}"
        group: "{{ vault_group }}"
        content: "{{ tls_key }}"
      notify: vault | reload
    - name: tls certificate file
      copy:
        dest: /vault/config/server.crt
        mode: 0644
        owner: "{{ vault_user }}"
        group: "{{ vault_group }}"
        content: "{{ tls_crt }}"
      notify: vault | reload
    - name: tls LDAP CA file
      copy:
        src: ../incommon.pem
        dest: /vault/config/ldap-ca.crt
        mode: 0644
        owner: "{{ vault_user }}"
        group: "{{ vault_group }}"

    - name: configuration file
      copy:
        dest: /vault/config/config.hcl
        mode: 0644
        owner: "{{ vault_user }}"
        group: "{{ vault_group }}"
        content: |
            storage "dynamodb" {
                ha_enabled = "true"
                region = "{{ region }}"
                table = "{{ vault_storage }}"
            }

            # Only for the health check
            listener "tcp" {
                address = "127.0.0.1:8100"
                tls_disable = "true"
            }

            # Public listener
            listener "tcp" {
                address = "0.0.0.0:8200"
                cluster_address = "0.0.0.0:8201"

                tls_cert_file = "/vault/config/server.crt"
                tls_key_file = "/vault/config/server.key"
            }

            ui = "true"
            pid_file = "/vault/vault.pid"

            api_addr = "https://{{ api_addr }}:8200"
            cluster_name = "{{ project }}"
            cluster_addr = "https://{{ cluster_addr }}:8201"
      notify: vault | reload

    - name: logrotate | configure vault log rotation
      copy:
        dest: /etc/logrotate.d/vault
        mode: 0644
        owner: root
        group: root
        content: !unsafe |
            /vault/logs/*.log {
                daily
                rotate 30
                compress
                delaycompress
                nocreate
                sharedscripts
                postrotate
                    /usr/local/bin/uiuc-vault-server-reload
                endscript
            }

  handlers:
    - name: vault | reload
      command: /usr/local/bin/uiuc-vault-server-reload
